final$`bh-SNE2`,
color = final$`pSTAT5(Nd150)Di.IL7.change`,
xlab = "bh-SNE1",
ylab = "bh-SNE2") + labs(color = "test")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=6, fig.height=4)
library(ggplot2)
test <- data.frame(rnorm(100), rnorm(100))
ggplot(test) + geom_point(aes(x = test[,1], y = test[,2]), color = 1) + scale_color_gradientn(colors = c("black", "yellow"))
range(final$`pSTAT5(Nd150)Di.IL7.change`)
hist(final$`pSTAT5(Nd150)Di.IL7.change`)
hist(final$`pSTAT5(Nd150)Di.IL7.change`, breaks = 100)
summary(final$`pSTAT5(Nd150)Di.IL7.change`)
document()
library(Sconify)
install.packages("devtools")
install.packages("devtools")
document()
library(Sconify)
document()
library(Sconify)
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
library(Sconify)
# FCS file provided in the package
basal <- system.file('extdata',
'Bendall et al Cell Sample C_basal.fcs',
package = "Sconify")
# Example of data with no transformation
basal.raw <- fcs.to.tibble(basal, transform = "none")
basal.raw
# Asinh transformation with a scale argument of 5
basal.asinh <- fcs.to.tibble(basal, transform = "asinh")
basal.asinh
document()
document()
library(devtools)
devtools::document()
setwd("~/Desktop")
libary(sconify)
library(Sconify)
dir()
get.marker.values("Bendall et al Cell Sample C_basal.fcs")
get.marker.names("Bendall et al Cell Sample C_basal.fcs")
dir()
dir()
setwd("~/Documents/local.R.projects/Sconify")
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
dir()
knitr::include_graphics("original.markers.csv.example.png")
#![Original markers.csv](original.markers.csv.example.png)
knitr::include_graphics("original.markers.csv.example.png")
#![Original markers.csv](original.markers.csv.example.png)
knitr::include_graphics("original.markers.csv.example.png")
#![Original markers.csv](original.markers.csv.example.png)
library(Sconify)
devtools::build_vignettes()
devtools::build_vignettes()
library(Sconify)
devtools::build_vignettes()
document()
devtools::document()
library(Sconify)
library(Sconify)
document()
library(devolls)
library(devtools)
document()
library(Sconify)
install_github(tjburns08/Sconify)
install_github("tjburns08/Sconify")
install_github("tjburns08/Sconify")
devtools::install_github("tjburns08/Sconify")
library(Sconify)
browseVignettes(Sconify)
browseVignettes(package = "Sconify")
browseVignettes(package = "Sconify")
browseVignettes(package = "Sconify")
browseVignettes(package = "Sconify")
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4)
library(Sconify)
library(ggplot2)
set.seed(12043)
final <- post.processing(scone.output = scone.output,
cell.data = combined,
input = input.markers)
combined # input data
scone.output # scone-generated data
final # the data after post-processing
# tSNE map shows highly responsive population of interest
qplot(final$`bh-SNE1`,
final$`bh-SNE2`,
color = final$`pSTAT5(Nd150)Di.IL7.change`,
xlab = "bh-SNE1",
ylab = "bh-SNE2") +
labs(color = "IL7 -> pSTAT5 change") +
scale_color_gradientn(colors = c("black", "yellow"))
# tSNE map now colored by q value
qplot(final$`bh-SNE1`,
final$`bh-SNE2`,
color = final$`pSTAT5(Nd150)Di.IL7.qvalue`,
xlab = "bh-SNE1",
ylab = "bh-SNE2") +
labs(color = "IL7 -> pSTAT5 -log10(qvalue)") +
scale_color_gradientn(colors = c("black", "yellow"))
devtools::build_vignettes()
final
use_data(final)
devtools::use_data(final)
final
devtools::build_vignettes()
library(Sconify)
document()
library(devtools)
document()
combined
library(Sconify)
combined
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4)
combined # input data
scone.output # scone-generated data
final # the data after post-processing
# tSNE map shows highly responsive population of interest
qplot(final$`bh-SNE1`,
final$`bh-SNE2`,
color = final$`pSTAT5(Nd150)Di.IL7.change`,
xlab = "bh-SNE1",
ylab = "bh-SNE2") +
labs(color = "IL7 -> pSTAT5 change") +
scale_color_gradientn(colors = c("black", "yellow"))
# tSNE map now colored by q value
qplot(final$`bh-SNE1`,
final$`bh-SNE2`,
color = final$`pSTAT5(Nd150)Di.IL7.qvalue`,
xlab = "bh-SNE1",
ylab = "bh-SNE2") +
labs(color = "IL7 -> pSTAT5 -log10(qvalue)") +
scale_color_gradientn(colors = c("black", "yellow"))
library(Sconify)
library(ggplot2)
set.seed(12043)
final <- post.processing(scone.output = scone.output,
cell.data = combined,
input = input.markers)
combined # input data
scone.output # scone-generated data
final # the data after post-processing
# tSNE map shows highly responsive population of interest
qplot(final$`bh-SNE1`,
final$`bh-SNE2`,
color = final$`pSTAT5(Nd150)Di.IL7.change`,
xlab = "bh-SNE1",
ylab = "bh-SNE2") +
labs(color = "IL7 -> pSTAT5 change") +
scale_color_gradientn(colors = c("black", "yellow"))
# tSNE map now colored by q value
qplot(final$`bh-SNE1`,
final$`bh-SNE2`,
color = final$`pSTAT5(Nd150)Di.IL7.qvalue`,
xlab = "bh-SNE1",
ylab = "bh-SNE2") +
labs(color = "IL7 -> pSTAT5 -log10(qvalue)") +
scale_color_gradientn(colors = c("black", "yellow"))
use_data(final)
use_data(final, overwrite = TRUE)
build_vignettes()
browseVignettes(Sconify)
browseVignettes("Sconify")
build_vignettes()
document()
build_vignettes()
library(Sconify)
browseVignettes("Sconify")
install.packages("tjburns08/Sconify")
devtools::install_github("tjburns08/Sconify")
library(Sconify)
browseVignettes("Sconify")
browseVignettes("Sconify")
browseVignettes("Sconify")
browseVignettes(Sconify)
browseVignettes("Sconify")
document()
library(Sconify)
browseVignettes("Sconify")
build_vignettes()
devtools::build()
install_github("tjburns08/Sconify", build_vignettes = TRUE)
library(Sconify)
browseVignettes("Sconify")
browseVignettes("Sconify")
browseVignettes("Sconify")
input
input
scone
combined
devtools::document()
library(Sconify)
input
scone
combined
input
nn
devtools::use_vignette("FindingIdealK")
k.titration
k.titration <- c(10, 50, 100, 200, 500, 1000, 2000)
devtools::use_data(k.titration)
basal
basal
il7
combined
il7
basal.raw
basal.asinh
exist
final
combined
basal
basal.cells <- process.multiple.files(files = basal, input = input.markers)
basal.cells
basal.data <- process.multiple.files(files = basal, input = input.markers)
il7.data <- process.multiple.files(files = il7, input = input.markers)
devtools::use_data(basal.data)
devtools::use_data(il7.data)
funct.markers
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
library(Sconify)
library(FNN)
ideal.k <- impute.testing(k.titration = k.titration, cells = il7.data, input.markers = input, test.markers = funct.markers)
il7.data
combined
funct.markers
input.markers
library(Sconify)
library(FNN)
ideal.k <- impute.testing(k.titration = k.titration, cells = il7.data, input.markers = input, test.markers = funct.markers)
input.markers
input
library(Sconify)
library(FNN)
ideal.k <- impute.testing(k.titration = k.titration, cells = il7.data, input.markers = input.markers, test.markers = funct.markers)
ideal.k
devtools::use_data(ideal.k)
ideal.k <- impute.testing(k.titration = k.titration, cells = il7.data, input.markers = input.markers, test.markers = funct.markers)
document()
devtools::document()
library(Sconify)
library(devtools)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
library(Sconify)
files <- list.files() %>% .[grep("fcs", .)]
files <- list.files() %>% .[grep("fcs", .)]
library(magrittr)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
files
files <- list.files() %>% .[grep("fcs", .)]
lps <- files[grep("LPS", files)]
il6 <- files[grep("IL6", files)]
files
lps
il6
total.files <- c(lps, il6)
basal <- files[grep("BL", files)]
cells <- process.multiple.files(basal, lps, il6)
total.files <- c(basal, lps, il6)
total.files
cells <- process.multiple.files(total.files)
markers <- read_csv("organized.markers.csv", stringsAsFactors = FALSE)
library(tidyverse)
markers <- read_csv("organized.markers.csv", stringsAsFactors = FALSE)
markers <- read_csv("organized.markers.csv")
markers
cells <- process.multiple.files(total.files,
numcells = 20000,
scale = TRUE,
input = input,
name.multiple.donors = TRUE)
cells
cells$barcode
multiple.donors <- process.multiple.files(total.files,
numcells = 20000,
scale = TRUE,
input = input,
name.multiple.donors = TRUE)
md.knn <- fnn(cell.df = multiple.donors, input.markers = input, k = 200)
# Getting in LPS and IL-6 dataset for combined scone
library(Sconify)
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
basal <- files[grep("BL", files)]
lps <- files[grep("LPS", files)]
il6 <- files[grep("IL6", files)]
total.files <- c(basal, lps, il6)
markers <- read_csv("organized.markers.csv")
# The setup
md <- process.multiple.files(total.files,
numcells = 20000,
scale = TRUE,
input = input,
name.multiple.donors = TRUE)
# Make sure everything works
md.nn <- fnn(cell.df = multiple.donors, input.markers = input, k = 200)
md.scone <- scone.values(nn.matrix = md.nn,
cell.data = md,
scone.markers = scone,
unstim = "BL",
multiple.donor.compare = TRUE)
md.final <- post.processing(scone.output = md.scone,
cell.data = md,
input = input,
tsne = TRUE,
log.transform.qvalue = TRUE)
md.final
md.final$`bh-SNE1`
qplot(md.final$`bh-SNE1`, md.final$`bh-SNE2`)
qplot(md.final$`bh-SNE1`, md.final$`bh-SNE2`, color = md.final$P38.IL6.replicate.qvalue)
qplot(md.final$`bh-SNE1`, md.final$`bh-SNE2`, color = md.final$P38.LPS.replicate.qvalue)
qplot(md.final$`bh-SNE1`, md.final$`bh-SNE2`, color = md.final$P38.LPSqvalue)
qplot(md.final$`bh-SNE1`, md.final$`bh-SNE2`, color = md.final$P38.LPS.qvalue)
input
input.markers
markers
# Getting in LPS and IL-6 dataset for combined scone
library(Sconify)
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
basal <- files[grep("BL", files)]
lps <- files[grep("LPS", files)]
il6 <- files[grep("IL6", files)]
total.files <- c(basal, lps, il6)
markers <- read_csv("organized.markers.csv")
md.input <- markers$input
md.scone <- markers$scone
# The setup
set.seed(10218)
md <- process.multiple.files(total.files,
numcells = 20000,
scale = TRUE,
input = md.input,
name.multiple.donors = TRUE)
# Make sure everything works
md.nn <- fnn(cell.df = multiple.donors, input.markers = md.input, k = 200)
md.scone.output <- scone.values(nn.matrix = md.nn,
cell.data = md,
scone.markers = md.scone,
unstim = "BL",
multiple.donor.compare = TRUE)
md.final <- post.processing(scone.output = md.scone.output,
cell.data = md,
input = md.input,
tsne = TRUE,
log.transform.qvalue = TRUE)
# Get the data into the package, to be shown in a vignette with this code
md.nn <- fnn(cell.df = multiple.donors, input.markers = md.input, k = 200)
md.nn
str(md.nn)
str(nn)
md
md
multiple.donors
# Getting in LPS and IL-6 dataset for combined scone
library(Sconify)
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
basal <- files[grep("BL", files)]
lps <- files[grep("LPS", files)]
il6 <- files[grep("IL6", files)]
total.files <- c(basal, lps, il6)
markers <- read_csv("organized.markers.csv")
md.input <- markers$input
md.scone <- markers$scone
# The setup
set.seed(10218)
md <- process.multiple.files(total.files,
numcells = 20000,
scale = TRUE,
input = md.input,
name.multiple.donors = TRUE)
# Make sure everything works
md.nn <- fnn(cell.df = md, input.markers = md.input, k = 200)
md.scone.output <- scone.values(nn.matrix = md.nn,
cell.data = md,
scone.markers = md.scone,
unstim = "BL",
multiple.donor.compare = TRUE)
md.final <- post.processing(scone.output = md.scone.output,
cell.data = md,
input = md.input,
tsne = TRUE,
log.transform.qvalue = TRUE)
# Get the data into the package, to be shown in a vignette with this code
md
md.nn
md.input
md.scone
md.scone <- !is.na(markers$scone)
me.scone
md.scone
md.scone <- complete.cases(markers$scone)
md.scone
md.scone <- markers$scone %>% .[!is.na(.)]
md.scone
# Getting in LPS and IL-6 dataset for combined scone
library(Sconify)
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
basal <- files[grep("BL", files)]
lps <- files[grep("LPS", files)]
il6 <- files[grep("IL6", files)]
total.files <- c(basal, lps, il6)
markers <- read_csv("organized.markers.csv")
md.input <- markers$input
md.scone <- markers$scone %>% .[!is.na(.)]
# The setup
set.seed(10218)
md <- process.multiple.files(total.files,
numcells = 20000,
scale = TRUE,
input = md.input,
name.multiple.donors = TRUE)
# Make sure everything works
md.nn <- fnn(cell.df = md, input.markers = md.input, k = 200)
md.scone.output <- scone.values(nn.matrix = md.nn,
cell.data = md,
scone.markers = md.scone,
unstim = "BL",
multiple.donor.compare = TRUE)
md.final <- post.processing(scone.output = md.scone.output,
cell.data = md,
input = md.input,
tsne = TRUE,
log.transform.qvalue = TRUE)
# Get the data into the package, to be shown in a vignette with this code
qplot(md.final$`bh-SNE1`, md.final$`bh-SNE2`, color = md.final$P38.LPS.replicate.qvalue)
qplot(md.final$`bh-SNE1`, md.final$`bh-SNE2`, color = md.final$P38.LPS.qvalue)
use_data(md)
setwd("~/Documents/local.R.projects/Sconify")
use_data(md)
use_data(md.nn)
use_data(md.scome.output)
use_data(md.scone.output)
use_data(md.final)
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
libary(Sconify)
library(Sconify)
md
md.input
library(Sconify)
document()
devtools::document()
library(Sconify)
md.input
md.scone
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
library(Sconify)
md.input
md.scone
library(Sconify)
md.input
md.scone
library(Sconify)
# Markers to be used for KNN computation
md.input
# Markers to be used for per-KNN statistics
md.scone
md <- process.multiple.files(total.files,
numcells = 20000,
scale = TRUE,
input = md.input,
name.multiple.donors = TRUE)
md
?data
md
data(md, package = "Sconify")
md
md.scone.output
md.input
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
library(Sconify)
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/scone/gabi.surgery.stims/fcs")
files <- list.files() %>% .[grep("fcs", .)]
basal <- files[grep("BL", files)]
lps <- files[grep("LPS", files)]
il6 <- files[grep("IL6", files)]
total.files <- c(basal, lps, il6)
markers <- read_csv("organized.markers.csv")
md.input <- markers$input
md.scone <- markers$scone %>% .[!is.na(.)]
md.input
md.scone
use_data(md.input)
library(devtools)
use_data(md.input)
setwd("~/Documents/local.R.projects/Sconify")
use_data(md.input)
use_data(md.scone)
document()
library(Sconify)
md.final
markers
split
library(devtools)
ls
dir()
