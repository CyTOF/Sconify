input.markers = input.markers,
test.markers = funct.markers)
impute.testing(k.titration = c(-4),
cells = wand.il7,
input.markers = input.markers,
test.markers = funct.markers)
fnn(cell.df = wand.combined, input.markers = input.markers, k = 3.2)
fnn(cell.df = wand.combined, input.markers = input.markers, k = 3)
library(Sconify)
fnn(cell.df = wand.combined, input.markers = input.markers, k = 3)
devtools::document()
library(Sconify)
View(fnn)
fnn(cell.df = wand.combined, input.markers = input.markers, k = 3)
fnn(cell.df = wand.combined, input.markers = input.markers, k = 3.3)
fnn(cell.df = wand.combined, input.markers = input.markers, k = 3.9)
fnn(cell.df = wand.combined, input.markers = input.markers, k = "poppycock")
devtools::test()
test <- 1:10
sapply(test, function(i) i + 1)
vapply(test, function(i) i + 1)
?vapply
vapply(test, function(i) i + 1; return(i))
vapply(test, function(i) i + 1 return(i))
vapply(test, function(i) {
i + 1
return(i)
})
sapply(test, function(i) {
i + 1
})
vapply(test, function(i) {
i + 1
})
?vapply
vapply(test, function(i) {
i + 1
}, FUN.VALUE = vector())
vapply(test, function(i) {
i + 1
}, FUN.VALUE = vector(10))
vapply(test, function(i) {
i + 1
}, FUN.VALUE = numeric(10))
vapply(test, function(i) {
i + 1
}, FUN.VALUE = character(1))
vapply(test, function(i) {
i + 1
}, FUN.VALUE = double(1))
vapply(test, function(i) {
i + 1
}, FUN.VALUE = double(10))
vapply(test, function(i) {
i + 1
}, FUN.VALUE = double(1))
s <- sapply(test, function(i) {
i + 1
})
str(s)
v <- vapply(test, function(i) {
i + 1
}, FUN.VALUE = double(1))
str(v)
v <- vapply(test, function(i) {
i + 1
})
v <- vapply(test, function(i) {
i + 1
}, FUN.VALUE = double())
v <- vapply(test, function(i) {
i + 1
}, FUN.VALUE = double(1))
devtools::test()
devtools::test()
test <- devtools::test()
summary(test)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools:::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
cbind(1:10, 1:10)
str(cbind(1:10, 1:10))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
impute.testing(k.titration = c(10, 20), cells = cells, input.markers = input.markers[1], test.markers = test.markers)
impute.testing(k.titration = c(10, 20), cells = wand.combined, input.markers = input.markers[1], test.markers = test.markers)
impute.testing(k.titration = c(10, 20), cells = wand.combined, input.markers = input.markers[1], test.markers = funct.markers)
impute.testing(k.titration = c(10, 20), cells = wand.combined, input.markers = input.markers, test.markers = funct.markers)
devtools::document()
devtools::use_news_md()
devtools::test()
devtools::document()
devtools::test()
tempdir()
markers
tableEdit(markers)
?tableEdit
rNMR
install.packages("rNMR")
edit(markers)
markers
edit(markers)
file
setwd("~/Documents/local.projects/KNN/Scone/code/Sconify/inst/extdata")
files <- list.files()
test <- files[1]
test
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- edit(result)
return(result)
}
marker.edit(test)
marker.test <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells) %>% as.tibble()
result <- edit(result)
return(result)
}
files <- list.files()
test <- files[1]
marker.test <- marker.edit(test)
markers
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "")
result <- edit(result)
return(result)
}
marker.test <- marker.edit(test)
marker.test <- marker.edit(test)
marker.test
complete.cases(marker.test)
install.packages("DT")
library(DT)
datatable(markers)
datatable(markers, editable = TRUE)
library(DT)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "")
result <- datatable(result, editable = TRUE)
return(result)
}
files <- list.files()
test <- files[1]
marker.test <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "")
result <- datatable(result, editable = TRUE)
return(result)
}
files <- list.files()
test <- files[1]
marker.test <- marker.edit(test)
markre.test
marker.test
marker.test
library(Sconify)
?parse.markers
parse.markers
tempfile(markers, "test")
?tempfile
?tempdir
?tempdir()
?write.csv
?edit
xedit(markers)
pico(markers)
vi(markers)
markers
xemacs(markers)
xedit(markers)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "")
result <- xedit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
library(DT)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "")
result <- xedit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- data.frame(input = colnames(cells), functional = "")
result <- xedit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- matrix(input = colnames(cells), functional = "")
result <- xedit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- datatable(input = colnames(cells), functional = "")
result <- xedit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = NULL)
result <- xedit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = NA)
result <- xedit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = NA)
result <- edit(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
result <- colnames(cells)
result <- tibble(input = colnames(cells), functional = NA)
result <- fix(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
funct <- markers[grep("$p", .)]
input <- markers[!(markers %in% funct)]
result <- tibble(input = colnames(cells), functional = funct)
result <- fix(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
funct <- markers[grep("$p", markers)]
input <- markers[!(markers %in% funct)]
result <- tibble(input = colnames(cells), functional = funct)
result <- fix(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
funct <- markers[grep("p", markers)]
input <- markers[!(markers %in% funct)]
result <- tibble(input = colnames(cells), functional = funct)
result <- fix(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- tibble(input = colnames(cells), functional = funct)
result <- fix(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "NA")
result <- vi(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- list(input = colnames(cells), functional = "NA")
result <- vi(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit
test.edit
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- list(input = colnames(cells), functional = "NA")
result <- vi(result)
result <- do.call(cbind, result) %>% as.tibble()
return(result)
}
test.edit <- marker.edit(test)
test.edit
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- list(input = colnames(cells), functional = "")
result <- vi(result)
result <- do.call(cbind, result) %>% as.tibble()
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
test.edit
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "")
result <- vi(result)
return(result)
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
test.edit
data.frame(test)
data.frame(test.edit)
surf <- test.edit$input %>% .[complete.cases(.)]
fun <- test.edit$functional %>% .[complete.cases(.)]
surf
funct
fun
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- list(input = colnames(cells), functional = "")
result <- vi(result)
return(list(surface = result[[1]], functional = result[[2]]))
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
surf <- test.edit$input %>% .[complete.cases(.)]
test.edit
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- list(input = colnames(cells), functional = "")
result <- vi(result)
return(list(surface = result[[1]], functional = result[[2]]))
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
test
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- list(input = colnames(cells), functional = c())
result <- vi(result)
return(list(surface = result[[1]], functional = result[[2]]))
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
?edit.default
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- tibble(input = colnames(cells), functional = c())
result <- vi(result)
return(list(surface = result[[1]], functional = result[[2]]))
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- tibble(input = colnames(cells), functional = NULL)
result <- vi(result)
return(list(surface = result[[1]], functional = result[[2]]))
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
marker.edit <- function(file) {
cells <- fcs.to.tibble(file)
markers <- colnames(cells)
result <- tibble(input = colnames(cells), functional = "")
result <- vi(result)
return(list(surface = result[[1]], functional = result[[2]]))
}
files <- list.files()
test <- files[1]
test.edit <- marker.edit(test)
test.edit
test.edit[[2]]
test.edit[[1]]
test.edit[[2]]
test.edit[[2]][1]
test.edit[[2]][2]
devtools::document()
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
# Example fcs file
basal <- system.file('extdata',
'Bendall_et_al_Cell_Sample_C_basal.fcs',
package = "Sconify")
# Run this, and check your directory for "markers.csv"
markers <- get.marker.names(basal)
markers
# Example fcs file
basal <- system.file('extdata',
'Bendall_et_al_Cell_Sample_C_basal.fcs',
package = "Sconify")
# Run this, and check your directory for "markers.csv"
markers <- get.marker.names(basal)
markers
library(Sconify)
devtools::test()
wand.ideal.k
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
knitr::opts_chunk$set(fig.width=6, fig.height=4)
wand.final <- post.processing(scone.output = wand.scone,
cell.data = combined,
input = input.markers)
wand.final <- post.processing(scone.output = wand.scone,
cell.data = combined,
input = input.markers)
wand.final <- post.processing(scone.output = wand.scone,
cell.data = wand.combined,
input = input.markers)
knitr::opts_chunk$set(echo = TRUE, results = "markup", message = FALSE, warning = FALSE)
wand.scone <- scone.values(nn.matrix = wand.nn,
cell.data = combined,
scone.markers = funct.markers,
unstim = "basal")
wand.scone <- scone.values(nn.matrix = wand.nn,
cell.data = wand.combined,
scone.markers = funct.markers,
unstim = "basal")
wand.nn
library(Sconify)
wand.nn
devtools::document()
library(Sconify)
devtools::test()
devtools::test()
